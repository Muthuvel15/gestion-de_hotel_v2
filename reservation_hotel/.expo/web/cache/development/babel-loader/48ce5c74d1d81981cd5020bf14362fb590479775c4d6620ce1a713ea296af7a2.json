{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    if (email === 'user@example.com' && password === 'password') {\n      navigation.navigate('Accueil');\n    } else {\n      alert('Email ou mot de passe incorrect');\n    }\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 20,\n        marginBottom: 20\n      },\n      children: \"Page de connexion\"\n    }), _jsx(TextInput, {\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      style: {\n        borderWidth: 1,\n        padding: 10,\n        marginBottom: 10,\n        width: '80%'\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Mot de passe\",\n      value: password,\n      onChangeText: setPassword,\n      style: {\n        borderWidth: 1,\n        padding: 10,\n        marginBottom: 10,\n        width: '80%'\n      },\n      secureTextEntry: true\n    }), _jsx(TouchableOpacity, {\n      onPress: handleLogin,\n      style: {\n        backgroundColor: 'lightblue',\n        padding: 10\n      },\n      children: _jsx(Text, {\n        style: {\n          fontSize: 16\n        },\n        children: \"Se connecter\"\n      })\n    })]\n  });\n};\nexport default Login;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","Login","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleLogin","navigate","alert","style","flex","justifyContent","alignItems","children","fontSize","marginBottom","placeholder","value","onChangeText","borderWidth","padding","width","secureTextEntry","onPress","backgroundColor"],"sources":["C:/Users/nabila.el-abdali/Desktop/IPSSI/Master1_IA/ReactNative/gestion-de_hotel_v2/reservation_hotel/screens/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity } from 'react-native';\r\n\r\nconst Login = ({ navigation }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    // Ajoutez ici votre logique de connexion avec email et mot de passe\r\n    // par exemple, une requête vers votre API pour vérifier les informations de connexion\r\n\r\n    // Remplacez cette logique fictive par votre propre logique d'authentification\r\n    if (email === 'user@example.com' && password === 'password') {\r\n      // Une fois la connexion réussie, vous pouvez rediriger l'utilisateur vers la page principale\r\n      navigation.navigate('Accueil');\r\n    } else {\r\n      // Gérez le cas où les informations de connexion sont incorrectes\r\n      alert('Email ou mot de passe incorrect');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Text style={{ fontSize: 20, marginBottom: 20 }}>Page de connexion</Text>\r\n      <TextInput\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        style={{ borderWidth: 1, padding: 10, marginBottom: 10, width: '80%' }}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Mot de passe\"\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        style={{ borderWidth: 1, padding: 10, marginBottom: 10, width: '80%' }}\r\n        secureTextEntry\r\n      />\r\n      <TouchableOpacity onPress={handleLogin} style={{ backgroundColor: 'lightblue', padding: 10 }}>\r\n        <Text style={{ fontSize: 16 }}>Se connecter</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACzB,IAAAC,SAAA,GAA0BZ,QAAQ,CAAC,EAAE,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgCjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IAKxB,IAAIN,KAAK,KAAK,kBAAkB,IAAII,QAAQ,KAAK,UAAU,EAAE;MAE3DR,UAAU,CAACW,QAAQ,CAAC,SAAS,CAAC;IAChC,CAAC,MAAM;MAELC,KAAK,CAAC,iCAAiC,CAAC;IAC1C;EACF,CAAC;EAED,OACEf,KAAA,CAACP,IAAI;IAACuB,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,GACvEtB,IAAA,CAACJ,IAAI;MAACsB,KAAK,EAAE;QAAEK,QAAQ,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAG,CAAE;MAAAF,QAAA,EAAC;IAAiB,CAAM,CAAC,EACzEtB,IAAA,CAACH,SAAS;MACR4B,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEjB,KAAM;MACbkB,YAAY,EAAEjB,QAAS;MACvBQ,KAAK,EAAE;QAAEU,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,EAAE;QAAEL,YAAY,EAAE,EAAE;QAAEM,KAAK,EAAE;MAAM;IAAE,CACxE,CAAC,EACF9B,IAAA,CAACH,SAAS;MACR4B,WAAW,EAAC,cAAc;MAC1BC,KAAK,EAAEb,QAAS;MAChBc,YAAY,EAAEb,WAAY;MAC1BI,KAAK,EAAE;QAAEU,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,EAAE;QAAEL,YAAY,EAAE,EAAE;QAAEM,KAAK,EAAE;MAAM,CAAE;MACvEC,eAAe;IAAA,CAChB,CAAC,EACF/B,IAAA,CAACF,gBAAgB;MAACkC,OAAO,EAAEjB,WAAY;MAACG,KAAK,EAAE;QAAEe,eAAe,EAAE,WAAW;QAAEJ,OAAO,EAAE;MAAG,CAAE;MAAAP,QAAA,EAC3FtB,IAAA,CAACJ,IAAI;QAACsB,KAAK,EAAE;UAAEK,QAAQ,EAAE;QAAG,CAAE;QAAAD,QAAA,EAAC;MAAY,CAAM;IAAC,CAClC,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,eAAenB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}